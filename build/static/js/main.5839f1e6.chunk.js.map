{"version":3,"sources":["logo.svg","component/cityText.js","component/guestsText.js","component/searchbar.js","component/bnbCard.js","component/citySelectionList.js","component/counter.js","component/guestSelection.js","component/searchOverlay.js","component/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CityText","city","className","GuestsText","guests","Searchbar","adult","child","onClick","type","icon","faSearch","BnbCard","bnb","style","backgroundImage","photo","alt","title","superHost","beds","rating","CitySelectionList","onSelect","useState","cityList","setCityList","useEffect","clist","data","includes","push","map","key","indexOf","faMapMarkerAlt","Counter","value","name","GuestSelection","onChangeAdult","onChangeChild","SearchOverlay","defaultCity","defaultAdult","defaultChild","currentSelection","setCurrentSelection","selectedCity","setSelectedCity","selectedAdult","setSelectedAdult","selectedChild","setSelectedChild","handleSelectCity","handleChangeAdult","e","currentTarget","handleChangeChild","handleSearch","window","location","replace","faTimes","Home","state","bnbList","selection","editSearch","handleOpenSearch","setState","querycity","queryadult","querychild","queryString","parse","this","props","search","undefined","parseInt","filterList","filter","toLowerCase","ttlguests","maxGuests","Fragment","src","logo","role","length","renderPropertiesCard","Component","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5839f1e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.54ee1f4a.svg\";","import React from \"react\";\r\n\r\nfunction CityText({ city }) {\r\n  return <div className=\"selectedCity\">{city === \"\" ? \"Finland\" : city + \", Finland\"}</div>;\r\n}\r\n\r\nexport default CityText;\r\n","import React from \"react\";\r\n\r\nfunction GuestsText({ guests }) {\r\n  return <div className={guests === 0 ? \"selectedGuests grey\" : \"guests\"}>{guests === 0 ? \"Add guests\" : guests + \" guests\"}</div>;\r\n}\r\n\r\nexport default GuestsText;\r\n","import React from \"react\";\r\nimport CityText from \"./cityText\";\r\nimport GuestsText from \"./guestsText\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Searchbar({ city, adult, child, onClick }) {\r\n  return (\r\n    <div className=\"search-gp\" type=\"button\">\r\n      <div onClick={() => onClick(\"city\")}>\r\n        <CityText city={city} />\r\n      </div>\r\n      <div onClick={() => onClick(\"guest\")}>\r\n        <GuestsText guests={adult + child} />\r\n      </div>\r\n      <div className=\"search\" onClick={onClick}>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nfunction BnbCard({ bnb }) {\r\n  return (\r\n    <div className=\"bnbCard\">\r\n      <div className=\"photo\" style={{ backgroundImage: `url(${bnb.photo})` }} alt={bnb.title} />\r\n      <div className=\"infoBar\">\r\n        {bnb.superHost ? <div className=\"super\">SUPER HOST</div> : null}\r\n        <span className=\"type\">\r\n          {bnb.type}\r\n          {bnb.beds != null ? \" . \" + bnb.beds + \" beds\" : null}\r\n        </span>\r\n        <div className=\"rating\">\r\n          <span className=\"star\">&#9733;</span>\r\n          <span className=\"point\">{bnb.rating}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"title\">{bnb.title}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BnbCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport data from \"../data/stays.json\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CitySelectionList({ onSelect }) {\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const clist = [];\r\n    for (const bnb of data) {\r\n      if (!clist.includes(bnb.city)) clist.push(bnb.city);\r\n    }\r\n    setCityList(clist);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"citySelection selection\">\r\n      <ul>\r\n        {cityList.map((city) => (\r\n          <li key={cityList.indexOf(city)} onClick={() => onSelect(city)}>\r\n            <span className=\"icon\">\r\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n            </span>\r\n            {city}, Finland\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitySelectionList;\r\n","import React from \"react\";\r\n\r\nfunction Counter({ value, onClick }) {\r\n  return (\r\n    <div className=\"counter\">\r\n      <button className=\"btn-minus\" name=\"minus\" type=\"button\" onClick={onClick}>\r\n        -\r\n      </button>\r\n      <div className=\"countNumber\">{value}</div>\r\n      <button className=\"btn-plus\" name=\"plus\" type=\"button\" onClick={onClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nfunction GuestSelection({ adult, child, onChangeAdult, onChangeChild }) {\r\n  return (\r\n    <div className=\"guestSelection selection\">\r\n      <div className=\"guestrow\">\r\n        <div className=\"title\">\r\n          <span className=\"type\">Adult</span>\r\n          <span className=\"label\">Ages 13 or above</span>\r\n        </div>\r\n        <Counter value={adult} onClick={onChangeAdult} />\r\n      </div>\r\n      <div className=\"guestrow\">\r\n        <div className=\"title\">\r\n          <span className=\"type\">Children</span>\r\n          <span className=\"label\">Ages 2 - 12</span>\r\n        </div>\r\n        <Counter value={child} onClick={onChangeChild} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuestSelection;\r\n","import React, { useState } from \"react\";\r\nimport CityText from \"./cityText\";\r\nimport GuestsText from \"./guestsText\";\r\nimport CitySelectionList from \"./citySelectionList\";\r\nimport GuestSelection from \"./guestSelection\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\n\r\nfunction SearchOverlay({ type, defaultCity, defaultAdult, defaultChild, onClick }) {\r\n  const [currentSelection, setCurrentSelection] = useState(type);\r\n  const [selectedCity, setSelectedCity] = useState(defaultCity);\r\n  const [selectedAdult, setSelectedAdult] = useState(defaultAdult);\r\n  const [selectedChild, setSelectedChild] = useState(defaultChild);\r\n\r\n  const handleSelectCity = (city) => {\r\n    setSelectedCity(city);\r\n  };\r\n\r\n  const handleChangeAdult = (e) => {\r\n    let adult = selectedAdult;\r\n    if (e.currentTarget.name === \"minus\" && adult > 0) adult--;\r\n    else if (e.currentTarget.name === \"plus\") adult++;\r\n\r\n    setSelectedAdult(adult);\r\n  };\r\n\r\n  const handleChangeChild = (e) => {\r\n    let child = selectedChild;\r\n    if (e.currentTarget.name === \"minus\" && child > 0) child--;\r\n    else if (e.currentTarget.name === \"plus\") child++;\r\n    setSelectedChild(child);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    //const { selectedCity, selectedAdult, selectedChild } = this.state;\r\n    window.location.replace(\"/?city=\" + selectedCity + \"&adult=\" + selectedAdult + \"&child=\" + selectedChild);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchOverlay\">\r\n      <div className=\"overlayContainer\">\r\n        <div className=\"header\">\r\n          <span>Edit your search</span>\r\n          <button type=\"button\" onClick={onClick}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n        <div className=\"searchbar-gp\">\r\n          <div className=\"city-gp\">\r\n            <div\r\n              className={currentSelection === \"city\" ? \"citybar searchbar active\" : \"citybar searchbar\"}\r\n              onClick={() => setCurrentSelection(\"city\")}>\r\n              <span className=\"label\">LOCATION</span>\r\n              <CityText city={selectedCity} />\r\n            </div>\r\n            <BrowserView>{currentSelection === \"city\" ? <CitySelectionList onSelect={handleSelectCity} /> : null}</BrowserView>\r\n          </div>\r\n          <div className=\"guest-gp\">\r\n            <div\r\n              className={currentSelection === \"guest\" ? \"guestbar searchbar active\" : \"guestbar searchbar\"}\r\n              onClick={() => setCurrentSelection(\"guest\")}>\r\n              <span className=\"label\">GUESTS</span>\r\n              <GuestsText guests={selectedAdult + selectedChild} />\r\n            </div>\r\n            <BrowserView>\r\n              {currentSelection === \"guest\" ? (\r\n                <GuestSelection adult={selectedAdult} child={selectedChild} onChangeAdult={handleChangeAdult} onChangeChild={handleChangeChild} />\r\n              ) : null}\r\n            </BrowserView>\r\n          </div>\r\n          <MobileView>\r\n            {currentSelection === \"city\" ? <CitySelectionList onSelect={handleSelectCity} /> : null}\r\n            {currentSelection === \"guest\" ? (\r\n              <GuestSelection adult={selectedAdult} child={selectedChild} onChangeAdult={handleChangeAdult} onChangeChild={handleChangeChild} />\r\n            ) : null}\r\n          </MobileView>\r\n          <div className=\"btnTop\">\r\n            <button className=\"btn-link\" onClick={handleSearch}>\r\n              <FontAwesomeIcon icon={faSearch} />\r\n              &nbsp; Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btnBottom\">\r\n          <button className=\"btn-link\" onClick={handleSearch}>\r\n            <FontAwesomeIcon icon={faSearch} />\r\n            &nbsp; Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg\" onClick={onClick}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchOverlay;\r\n","import React, { Component } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport Searchbar from \"./searchbar\";\r\nimport BnbCard from \"./bnbCard\";\r\nimport SearchOverlay from \"./searchOverlay\";\r\nimport data from \"../data/stays.json\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    bnbList: [],\r\n    city: \"\",\r\n    adult: 0,\r\n    child: 0,\r\n    selection: \"\",\r\n    editSearch: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { city, adult, child } = queryString.parse(this.props.location.search);\r\n    let querycity, queryadult, querychild;\r\n\r\n    if (city === undefined) querycity = \"\";\r\n    else querycity = city;\r\n\r\n    if (adult === undefined) queryadult = 0;\r\n    else queryadult = parseInt(adult);\r\n\r\n    if (child === undefined) querychild = 0;\r\n    else querychild = parseInt(child);\r\n\r\n    let filterList = [...data];\r\n    if (querycity !== \"\") {\r\n      filterList = filterList.filter((bnb) => bnb.city.toLowerCase() === city.toLowerCase());\r\n    }\r\n    if (queryadult > 0 || querychild > 0) {\r\n      const ttlguests = queryadult + querychild;\r\n      filterList = filterList.filter((bnb) => bnb.maxGuests >= ttlguests);\r\n    }\r\n\r\n    this.setState({\r\n      city: querycity,\r\n      adult: queryadult,\r\n      child: querychild,\r\n      bnbList: filterList,\r\n    });\r\n  }\r\n\r\n  renderPropertiesCard() {\r\n    const { bnbList } = this.state;\r\n    return bnbList.map((bnb) => <BnbCard key={bnbList.indexOf(bnb)} bnb={bnb} />);\r\n  }\r\n\r\n  handleOpenSearch = (type) => {\r\n    //console.log(type);\r\n    const { editSearch } = this.state;\r\n    if (editSearch) this.setState({ editSearch: false });\r\n    else this.setState({ editSearch: true, selection: type });\r\n  };\r\n\r\n  render() {\r\n    const { city, adult, child, selection, bnbList, editSearch } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {editSearch ? (\r\n          <SearchOverlay type={selection} defaultCity={city} defaultAdult={adult} defaultChild={child} onClick={this.handleOpenSearch} />\r\n        ) : null}\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"windbnb-logo\" />\r\n          </div>\r\n          <Searchbar city={city} adult={adult} child={child} onClick={this.handleOpenSearch} />\r\n        </nav>\r\n\r\n        <main role=\"main\" className={editSearch ? \"fixed\" : \"\"}>\r\n          <div className=\"pagetitle\">\r\n            <h1>Stays in Finland</h1>\r\n            <span>{bnbList.length <= 12 ? bnbList.length : \"12+\"} stays</span>\r\n          </div>\r\n          <div className=\"cardContainer\">{bnbList.length > 0 ? this.renderPropertiesCard() : <h3>No stay found. Please try another search.</h3>}</div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./component/home\";\nimport \"./App.css\";\nimport \"./css/homeStyle.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}